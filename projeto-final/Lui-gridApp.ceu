#include "Lui.ceu"
#include "Lui-grid.ceu"
#ifdef __UI_GRID_CEU

#include "sdl-colors.ceu"

input void SDL_QUIT;

var _SDL_Window[] win;
    finalize
        win = _SDL_CreateWindow("LUI - Grid",
                            500, 1300, 800, 480, _SDL_WINDOW_SHOWN);
    with
        _SDL_DestroyWindow(win);
    end
var int win_w;
var int win_h;
    _SDL_GetWindowSize(win, &win_w, &win_h);

var _SDL_Renderer[] ren;
    finalize
        ren = _SDL_CreateRenderer(win, -1, 0);
    with
        _SDL_DestroyRenderer(ren);
    end

native _lay1, _lay2;
native do
    int lay1[16] = {
         0, -1, -1, -1,
        -1,  1,  1, -1,
        -1,  1,  1, -1,
        -1, -1, -1,  2
    };
    int lay2[3] = {
        0, 1, 2
    };
end

LUI_load("Lui-grid.lua");
par/or do
    await SDL_QUIT;
with
    var LUIGrid g1 with
        this.ren = ren;
        this.varname = "g1"; 
        this.lay := _lay1;
        this.lay_lins = 4;
        this.lay_cols = 4;
        this.uis_n = 3;
    end;

    var UIGrid g2 with
        this.ren          = ren;
        this.clr_cell_fr  = &_colors.black;
        this.clr_ui_bg    = &_colors.yellow;
        this.clr_ui_fr    = &_colors.red;
        this.pad_x        = 5;
        this.pad_y        = 5;
        this.lay_lins     = 1;
        this.lay_cols     = 3;
        this.lay          := _lay2;
        this.uis_n        = 3;
    end;

    var _SDL_Rect r;
        r.x = win_w / 4;
        r.y = win_h / 4;
        r.w = win_w / 2;
        r.h = win_h / 2;

    spawn UIGridItem in g1.uis with
        this.ui  = &g2;
        this.idx = 1;
    end;

    par do
        loop do
            var int opt = await g1.ok_uiclicked;
            _fprintf(_stderr, "G1: %d\n", opt);
        end
    with
        loop do
            var int opt = await g2.ok_uiclicked;
            _fprintf(_stderr, "G2: %d\n", opt);
        end
    with
        native _rand();
        every 100ms do
            r.w = r.w + _rand() % 3 - 1;
            if r.w < 100 then r.w = 100; end

            r.h = r.h + _rand() % 3 - 1;
            if r.h < 100 then r.h = 100; end

            g1.spc_x = g1.spc_x + _rand() % 3 - 1;
            if g1.spc_x < 0 then g1.spc_x = 0; end

            g1.spc_y = g1.spc_y + _rand() % 3 - 1;
            if g1.spc_y < 0 then g1.spc_y = 0; end

            g2.pad_x = g2.pad_x + _rand() % 3 - 1;
            if g2.pad_x < 0 then g2.pad_x = 0; end

            g2.pad_y = g2.pad_y + _rand() % 3 - 1;
            if g2.pad_y < 0 then g2.pad_y = 0; end

            call/rec g1.go_bg(&r, true);
        end
    end
with
    every SDL_REDRAW do
        _SDL_RenderPresent(ren);
    end
end

escape 0;

#endif
